def multivariate_freq_dist(given_df, given_series1, given_series2, m):
    nt=[]
    import pandas as pd
    import numpy as np
    import math

    for j in given_df[given_series2].dropna().unique():
        df=[]
        df_test_k=given_df.loc[given_df[given_series2]==given_df[given_series2].min()]
        if m is None:
            m=math.sqrt(len(df_test_k[given_series1]))+1
        if m > 10:
            m=math.sqrt(math.sqrt(len(df_test_k[given_series1])))+1
        else:
            m=math.sqrt(len(df_test_k[given_series1]))+1


            C=((max(df_test_k[given_series1])-min(df_test_k[given_series1]))/m)+1  
            hist, bins = np.histogram(given_df.loc[given_df[given_series2]==j], bins=np.arange(min(df_test_k[given_series1]), max(df_test_k[given_series1])+int(C),int(C)))
            bin_counts = list(zip(bins, bins[1:], hist)) # [(bin_start, bin_end, count), ... ]

        for bin_start, bin_end, count in bin_counts[:]:
            nt.append('{} â‰¤ x < {}: {}: {}'.format(bin_start, bin_end, j.astype(int), count))

        df=[]
    for i in range(len(nt)):
        d = {given_series1: nt[i].split(':')[0],
             given_series2:nt[i].split(':')[1],
        'result':nt[i].split(':')[2]}
        df.append(d)
        dataframe=pd.DataFrame(data=df)
    return dataframe.pivot(index=given_series1, columns=given_series2, values='result')
